{"version":3,"sources":["lib.js","less14callback.js"],"names":["multiple","first","second","actionsWithArray","array","handler","res","i","length","arr","arr2","arr3","age","name","arr4","trimArrayAndCapitalize","firstLatterToUppercase","item","toUpperCase","slice","multiplyBy10","returnNameAndAge","reverseItem","split","reverse","join","console","log"],"mappings":"AAAA,SAAAA,SAAAC,EAAAC,GACA,OAAAD,EAAAC,ECeA,SAAAC,iBAAAC,EAAAC,GACA,IAAAC,EAAA,cACA,IAAA,IAAAC,EAAA,EAAAA,EAAAH,EAAAI,OAAAD,IACAD,GAAAD,EAAAD,EAAAG,IAEA,OAAAD,EAGA,IAAAG,IAAA,CAAA,KAAA,OAAA,KAAA,WACAC,KAAA,CAAA,EAAA,EAAA,EAAA,GACAC,KAAA,CAAA,CAAAC,IAAA,GAAAC,KAAA,QAAA,CAAAD,IAAA,GAAAC,KAAA,UACAC,KAAA,CAAA,MAAA,MAAA,OAEAC,uBAAAZ,iBAAAM,IAAAO,wBAEA,SAAAA,uBAAAC,GACA,OAAAA,EAAA,GAAAC,cAAAD,EAAAE,MAAA,GAGA,SAAAC,aAAAH,GACA,OAAA,GAAAA,EAAA,KAGA,SAAAI,iBAAAJ,GACA,MAAA,GAAAA,EAAAJ,WAAAI,EAAAL,QAGA,SAAAU,YAAAL,GACA,OAAAA,EAAAM,MAAA,IAAAC,UAAAC,KAAA,IAAA,KAGAC,QAAAC,IAAAZ,wBACAW,QAAAC,IAAAxB,iBAAAO,KAAAU,eACAM,QAAAC,IAAAxB,iBAAAQ,KAAAU,mBACAK,QAAAC,IAAAxB,iBAAAW,KAAAQ","file":"script.js","sourcesContent":["function multiple(first, second) {\r\n    return first * second;\r\n}","//1. Создать две функции и дать им осмысленные названия:\r\n// - первая функция принимает массив и колбэк (одна для всех вызовов)\r\n// - вторая функция (колбэк) обрабатывает каждый элемент массива (для каждого вызова свой callback)\r\n//\r\n// Первая функция возвращает строку “New value: ” и результат обработки:\r\n//\r\n// firstFunc([‘my’, ‘name’, ‘is’, ‘Trinity’], handler1) → “New value: MyNameIsTrinity”\r\n// firstFunc([10, 20, 30], handler2) → “New value: 100, 200, 300,”\r\n// firstFunc([{age: 45, name: ‘Jhon’}, {age: 20, name: ‘Aaron’}], handler3) →\r\n// “New value: Jhon is 45, Aaron is 20,”\r\n// firstFunc([‘abc’, ‘123’], handler4) → “New value: cba, 321,” // строки инвертируются\r\n//\r\n//\r\n// Подсказка: secondFunc должна быть представлена функцией, которая принимает\r\n// один аргумент (каждый элемент массива) и возвращает результат его обработки\r\n\r\nfunction actionsWithArray(array, handler) {\r\n    let res = 'New value: ';\r\n    for (let i = 0; i < array.length; i++){\r\n        res += handler(array[i]);\r\n    }\r\n    return res;\r\n}\r\n\r\nlet arr = ['my', 'name', 'is', 'Trinity'];\r\nlet arr2 = [1, 2, 3, 4];\r\nlet arr3 = [{age: 45, name: 'Jhon'}, {age: 20, name: 'Aaron'}];\r\nlet arr4 = ['abc', 'def', '123'];\r\n\r\nlet trimArrayAndCapitalize = actionsWithArray(arr, firstLatterToUppercase);\r\n\r\nfunction firstLatterToUppercase(item){\r\n    return item[0].toUpperCase() + item.slice(1);\r\n}\r\n\r\nfunction multiplyBy10(item) {\r\n    return item * 10 + ', ';\r\n}\r\n\r\nfunction returnNameAndAge(item){\r\n    return `${item.name} is ${item.age}, `;\r\n}\r\n\r\nfunction reverseItem(item){\r\n    return item.split(\"\").reverse().join(\"\") + ', ';\r\n}\r\n\r\nconsole.log(trimArrayAndCapitalize);\r\nconsole.log(actionsWithArray(arr2, multiplyBy10));\r\nconsole.log(actionsWithArray(arr3, returnNameAndAge));\r\nconsole.log(actionsWithArray(arr4, reverseItem));"]}